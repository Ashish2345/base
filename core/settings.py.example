import os
import yaml

from pathlib import Path

BASE_DIR = Path(__file__).resolve().parent.parent

credentials = yaml.safe_load(open(os.path.join('credentials.yaml')))

SECRET_KEY = credentials['secret_key']

DEBUG =  credentials['debug']

ALLOWED_HOSTS =  credentials['allowed_hosts']

ENCRYPTION_KEY = b'sptz5E7TaJCwjJlpYOlFu7adBf58dRMAG5aWznuQKoQ='

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    #Apps
    'accounts.apps.AccountsConfig',
    'crispy_bootstrap5',
    'crispy_forms',
    'captcha',
    # 'axes',

]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "core.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, 'templates')],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "core.wsgi.application"

AUTH_USER_MODEL = "accounts.User"

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kathmandu'

USE_I18N = True

USE_TZ = False



#Email Setting
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'ashishrayamajhi227@gmail.com' 
EMAIL_HOST_PASSWORD = 'pcdvhturtcutpzgy' 
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

STATIC_URL = "static/"

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static")
]
MEDIA_ROOT = os.path.join(os.path.dirname(BASE_DIR), "media/")
MEDIA_URL = '/media/'


VALID_IMAGE_FORMAT = ['jpg', 'png', 'jpeg', 'heic', 'webp']

OTP_VALID_TILL = 600 #seconds

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

RECAPTCHA_PUBLIC_KEY = '6LdTyGMjAAAAAIaWEFoT2qOuyg5pHRTNsuzdfZG8'
RECAPTCHA_PRIVATE_KEY = '6LdTyGMjAAAAAB_LRrt1-XMnRu0aNMAJpzzuvxks'
RECAPTCHA_REQUIRED_SCORE = 0.85

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

DEFENDER_LOGIN_FAILURE_LIMIT = 5

DEFENDER_LOCKOUT_TIME = 300 

# AUTHENTICATION_BACKENDS = [
#     # AxesStandaloneBackend should be the first backend in the AUTHENTICATION_BACKENDS list.
#     'axes.backends.AxesStandaloneBackend',

#     # Django ModelBackend is the default authentication backend.
#     'django.contrib.auth.backends.ModelBackend',
# ]

CHANNEL_LAYERS = { 
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("127.0.0.1", 6379)],
        },
    },
}


# AXES_ENABLED = True

# AXES_FAILURE_LIMIT = 6

RATE_LIMIT_DURATION = 60


